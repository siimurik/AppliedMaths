Dec 14 2022

# General Linear Models (GLM)

# Lake Peipsi data
data = read.table('//home//siimep_x11//Documents//Magister//AppliedMaths//Statistics//Peipsi.txt', header = TRUE, sep="\t", dec=",")
attach(data)
data

# To compose model where resonse variable is Cyanobacteria (CY)
model = lm(CY~BAC+CHL+DIP+DOP+SI+DIN+DON) # lm - linear model
summary(model)

#   Call:
#   lm(formula = CY ~ BAC + CHL + DIP + DOP + SI + DIN + DON)
#   
#   Residuals:
#       Min      1Q  Median      3Q     Max 
#   -7.6822 -2.2952 -0.8053  1.3635 14.6166 
#   
#   Coefficients:   #(beta_j)
#                 Estimate Std. Error t value Pr(>|t|)    
#   (Intercept)    0.16324    0.90093   0.181 0.856466     #(p-values for beta_j)
#   BAC           -0.16486    0.04847  -3.401 0.000862 ***
#   CHL            2.59514    1.57431   1.648 0.101385    
#   DIP         -162.15167   41.99278  -3.861 0.000168 ***
#   DOP           94.01618   19.26097   4.881  2.7e-06 ***
#   SI            -0.07279    0.48201  -0.151 0.880165    
#   DIN           -2.67801    1.85229  -1.446 0.150351    
#   DON            2.33091    1.42489   1.636 0.103997    
#   ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#   
#   Residual standard error: 3.421 on 148 degrees of freedom
#   Multiple R-squared:  0.2467,    Adjusted R-squared:  0.2111 # About 25% of CY variance is described by the model on 75% by residuals
#   F-statistic: 6.925 on 7 and 148 DF,  p-value: 3.948e-07 # Answer: model is significant, p-value < 0.05

# To remoe non-significant parameters

model1 = lm(CY~BAC+DIP+DOP-1)   # -1 means we remove intercept
summary(model1)

#   Call:
#   lm(formula = CY ~ BAC + DIP + DOP - 1)
#   
#   Residuals:
#        Min       1Q   Median       3Q      Max 
#   -10.4133  -2.0364  -0.6245   1.6980  15.4656 
#   
#   Coefficients:
#         Estimate Std. Error t value Pr(>|t|)    
#   BAC   -0.14534    0.04879  -2.979  0.00336 ** 
#   DIP -184.15950   39.25143  -4.692 5.96e-06 ***
#   DOP  124.86392   14.00405   8.916 1.36e-15 ***
#   ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#   
#   Residual standard error: 3.483 on 153 degrees of freedom
#   Multiple R-squared:  0.5354,    Adjusted R-squared:  0.5263 # about 53% by model and 47% by residuals
#   F-statistic: 58.78 on 3 and 153 DF,  p-value: < 2.2e-16

## These sort of exercise is in the homework ##

# Non-parametric statistical tests

# Wilcoxon test

x1 = c(2,4,9,21,2,3)
x2 = c(1,3,8,7,4,10)    # are these populations same or different

# H0: x1 and x2 are similar
# H1: x1 and x2 are different

wilcox.test(x1,x2,alternative="two.sided")
# Comparing with t-test
t.test(x1, x2, alternative="two.sided")

#            Wilcoxon rank sum test with continuity correction
#    
#    data:  x1 and x2
#    W = 17, p-value = 0.9358
#    alternative hypothesis: true location shift is not equal to 0
#    
#    Warning message:
#    In wilcox.test.default(x1, x2, alternative = "two.sided") :
#      cannot compute exact p-value with ties

# Kolmogorov-Smirov Test on x1 and x2

# H0: x1 has normal distribution
# H1: x1 has not normal distribution

ks.test(x1, "pnorm", mean(x1), sd(x1))

#           Asymptotic one-sample Kolmogorov-Smirnov test
#   
#   data:  x1
#   D = 0.3155, p-value = 0.589
#   alternative hypothesis: two-sided
#   
#   Warning message:
#   In ks.test.default(x1, "pnorm", mean(x1), sd(x1)) :
#     ties should not be present for the Kolmogorov-Smirnov test

y = rexp(20)
ks.test(y, "pnorm", mean(y), sd(y))

# H0: x1 and x2 have the same distribution
# H1: x1 and x2 jave different distributions

ks.test(x1,x2)

#           Exact two-sample Kolmogorov-Smirnov test
#   
#   data:  x1 and x2
#   D = 0.16667, p-value = 1
#   alternative hypothesis: two-sided

# Friedmann test
# uses the opik_laevad.txt
# Let k experts test on object in m aspects
#{   H0: All experts estimate similarly
#{   H1: At least 1 expert estimates differently

data1 = read.table('//home//siimep_x11//Documents//Magister//AppliedMaths//Statistics//opik_laevad.txt', header = TRUE, sep="\t")
attach(data1)
data1

# H0: Decay of ship metals are the same
# H1: There exists some differences

friedman.test(Korrosioon~Laevad | Metall)

#           Friedman rank sum test
#   
#   data:  Korrosioon and Laevad and Metall
#   Friedman chi-squared = 8.0513, df = 2, p-value = 0.01785   #Answer: at significance 0.05 we can reject H0


# Quantile test
x = c(2,1,7,4,8,9)
y=0
Pvalue=0
for (j in 1:300){
    for(i in 1:1000) y[i]=sample(x,1)
    S=length(sample(y[y<=8]))
    Z=(S-0.8*1000)/sqrt(0.8*0.2*1000)
    Pvalue[j]=2*(1-pnorm(abs(Z)))
}
Pvalue
round(quantile(Pvalue, 0.025), 4)
round(quantile(Pvalue, 0.975), 4)

# Markov chains in R

modelStates = c("A", "B", "C")
byRow = TRUE
modelMatrix=matrix(data=c(0.7, 0.2, 0.1, 0.3, 0.4))

# Likelihood ratio (LR) criterion ## In three of the examples ## 

i1=integrate(Vectorize(tihedus), 0, 0.5)
12=integrate(Vectorize(tihedus), 0.5, 100) ## correct
LR=i1$value/i2$value
LR

# To test P(get even number of eyes)
#x=c(4,6,3,2,7,1,8)
x=c(5,6,5,2,2)
n=10
alpha=1.5
beta=1.5    #prior is beta distribution
    tihedus=function (m){   ## tihedus ~ likelihood, m - probability
        if (m>0){
            d=dbeta(m,alpha, beta)*prod(dbinom(x,n,m))
        } else {
        d=0
        }
    return(d)
}
int1=integrate(Vectorize(tihedus), 0, 0.5)
int2=integrate(Vectorize(tihedus), 0.5, 1)
LR=int1$value/int2$value
LR


